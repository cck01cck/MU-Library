<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.2/css/all.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.4.0/font/bootstrap-icons.css">

    <script src="https://cdn.jsdelivr.net/npm/vanilla-lazyload@17.3.1/dist/lazyload.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>


    <style type="text/css">
        progress {
            -webkit-appearance: progress-bar;
            box-sizing: border-box;
            display: inline-block;
            height: 1em;
            width: 10em;
            vertical-align: -0.2em;
        }

        progress[value] {
            -webkit-appearance: none;
            appearance: none;
            width: 500px;
            height: 40px;
        }

        progress[value]::-webkit-progress-bar {
            background-color: #eee;
            border-radius: 2px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.25) inset;
        }

        progress[value]::-webkit-progress-value {
            background-image:
                -webkit-linear-gradient(-45deg,
                    transparent 33%, rgba(0, 0, 0, .1) 33%,
                    rgba(0, 0, 0, .1) 66%, transparent 66%),
                -webkit-linear-gradient(top,
                    rgba(255, 255, 255, .25),
                    rgba(0, 0, 0, .25)),
                -webkit-linear-gradient(left, #09c, #f44);

            border-radius: 2px;
            background-size: 35px 20px, 100% 100%, 100% 100%;
        }

        .drop-zone {
            max-width: 500px;
            height: 300px;
            padding: 25px;
            display: flex;
            align-items: center;
            justify-content: center;
            text-align: center;
            font-family: "Quicksand", sans-serif;
            font-weight: 500;
            font-size: 20px;
            cursor: pointer;
            color: #cccccc;
            border: 4px dashed #0099ff;
            border-radius: 10px;
        }

        .drop-zone--over {
            border: 4px dashed #0099ff;
            opacity: 0.6;
        }

        .drop-zone__input {
            display: none;
        }

        .drop-zone__thumb {
            width: 100%;
            height: 100%;
            border-radius: 10px;
            overflow: hidden;
            background-color: #cccccc;
            background-size: cover;
            position: relative;

        }

        .drop-zone__thumb::after {
            content: attr(data-label);
            position: absolute;
            bottom: 0;
            left: 0;
            width: 100%;
            padding: 5px 0;
            color: #ffffff;
            background: rgba(0, 0, 0, 0.75);
            font-size: 14px;
            text-align: center;
        }
    </style>


</head>

<body>
    <%- include('partials/sideBar.ejs'); %>
        <h1>Edit book</h1>
        <% items.forEach((datas)=> { %>

            <script>
                function back() {
                    location.href = '/detail?_id=<%=datas._id%>'
                }
            </script>
            <form action="/edit" method="POST" enctype="multipart/form-data" class="form-control">
                <input type="hidden" name="_id" value="<%=datas._id%>">
                <div class="form-group mb-2">
                    <label for="title">Title</label>
                    <input type="text" name="title" value="<%=datas.title%>" class="form-control w-50">
                </div>
                <br>
                <div class="form-group mb-2">
                    <label for="author">Author</label>
                    <input type="text" name="author" value="<%=datas.author%>"
                        class="form-control w-50">
                </div>
                <br>
                <div class="form-group mb-2">
                    <label for="qty">Quantity</label>
                    <input type="number" name="qty" value="<%=datas.quantity%>" class="form-control w-50">
                </div>
                <br>
                <div class="form-group mb-2">
                    <label for="language">Language</label>
                    <input type="text" name="language" value="<%=datas.language%>"
                        class="form-control w-50">
                </div>
                <br>

                <div class="form-group mb-2">
                    <label for="type">Type</label>
                    <input type="text" name="type" value="<%=datas.type%>" class="form-control w-50">
                </div>
                <br>
                <p>

               <br>
    
                <br><br>
                <input type="submit" value="Update" class="btn btn-primary mb-2">
            </form>
            <br>
            <button onclick="back()" class="btn btn-secondary">Back</button>

            </div>
            </div>
            <% }) %>

                <script>
                    $(document).ready.arguments
                    function _(el) {
                        return document.getElementById(el);
                    }

                    function upload() {
                        var file = _("filetoupload").files[0];
                        var formdata = new FormData();
                        formdata.append("file", file);
                        var ajax = new XMLHttpRequest();
                        ajax.upload.addEventListener("progress", progressHandler, false);
                        ajax.addEventListener("load", completeHandler, false);
                        ajax.addEventListener("error", errorHandler, false);
                        ajax.addEventListener("abort", abortHandler, false);
                        ajax.open("POST", "VieoUploadSuccessful");
                        ajax.send(formdata);
                    }

                    function progressHandler(event) {
                        _("loadedtotal").innerHTML = "Uploaded " + event.loaded + " bytes of " + event.total;
                        var percent = (event.loaded / event.total) * 100;
                        _("progressBar").value = Math.round(percent);
                        _("status").innerHTML = Math.round(percent) + "% uploaded... please wait";
                    }

                    function completeHandler(event) {
                        _("status").innerHTML = "Upload completed";
                    }

                    function errorHandler(event) {
                        _("status").innerHTML = "Upload Failed";
                    }

                    function abortHandler(event) {
                        _("status").innerHTML = "Upload Aborted";
                    }

                    document.querySelectorAll(".drop-zone__input").forEach((inputElement) => {
                        const dropZoneElement = inputElement.closest(".drop-zone");

                        dropZoneElement.addEventListener("click", (e) => {
                            inputElement.click();
                        });

                        inputElement.addEventListener("change", (e) => {
                            if (inputElement.files.length) {
                                updateThumbnail(dropZoneElement, inputElement.files[0]);
                            }
                        });

                        dropZoneElement.addEventListener("dragover", (e) => {
                            e.preventDefault();
                            dropZoneElement.classList.add("drop-zone--over");
                        });

                        ["dragleave", "dragend"].forEach((type) => {
                            dropZoneElement.addEventListener(type, (e) => {
                                dropZoneElement.classList.remove("drop-zone--over");
                            });
                        });

                        dropZoneElement.addEventListener("drop", (e) => {
                            e.preventDefault();

                            if (e.dataTransfer.files.length) {
                                inputElement.files = e.dataTransfer.files;
                                updateThumbnail(dropZoneElement, e.dataTransfer.files[0]);
                                upload();
                            }

                            dropZoneElement.classList.remove("drop-zone--over");
                        });
                    });

                    function updateThumbnail(dropZoneElement, file) {
                        let thumbnailElement = dropZoneElement.querySelector(".drop-zone__thumb");

                        // First time - remove the prompt
                        if (dropZoneElement.querySelector(".drop-zone__prompt")) {
                            dropZoneElement.querySelector(".drop-zone__prompt").remove();
                        }

                        // First time - there is no thumbnail element, so lets create it
                        if (!thumbnailElement) {
                            thumbnailElement = document.createElement("div");
                            thumbnailElement.classList.add("drop-zone__thumb");
                            dropZoneElement.appendChild(thumbnailElement);
                        }

                        thumbnailElement.dataset.label = file.name;


                    }
                </script>
</body>

</html>